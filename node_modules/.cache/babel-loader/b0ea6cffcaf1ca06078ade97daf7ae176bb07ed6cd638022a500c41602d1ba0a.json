{"ast":null,"code":"var _jsxFileName = \"/home/abhishek/Desktop/Studentdata/course-management/src/Cousre/CourseManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseManagement = ({\n  courses,\n  setCourses\n}) => {\n  _s();\n  const [courseName, setCourseName] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleAddCourse = () => {\n    if (!courseName) {\n      setErrorMessage('Course name is required');\n      return;\n    }\n    if (courses.some(course => course.name === courseName)) {\n      setErrorMessage('Course already exists');\n      return;\n    }\n    setCourses([...courses, {\n      id: Date.now(),\n      name: courseName\n    }]);\n    setCourseName('');\n    setErrorMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: courseName,\n      onChange: e => setCourseName(e.target.value),\n      placeholder: \"New Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddCourse,\n      children: \"Add Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: courses.map(course => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: course.name\n      }, course.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseManagement, \"N+I6r+l6alWJA4os/+eaC300rLs=\");\n_c = CourseManagement;\nexport default CourseManagement;\nvar _c;\n$RefreshReg$(_c, \"CourseManagement\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CourseManagement","courses","setCourses","_s","courseName","setCourseName","errorMessage","setErrorMessage","handleAddCourse","some","course","name","id","Date","now","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["/home/abhishek/Desktop/Studentdata/course-management/src/Cousre/CourseManagement.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CourseManagement = ({ courses, setCourses }) => {\n  const [courseName, setCourseName] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleAddCourse = () => {\n    if (!courseName) {\n      setErrorMessage('Course name is required');\n      return;\n    }\n\n    if (courses.some(course => course.name === courseName)) {\n      setErrorMessage('Course already exists');\n      return;\n    }\n\n    setCourses([...courses, { id: Date.now(), name: courseName }]);\n    setCourseName('');\n    setErrorMessage('');\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2>Courses</h2>\n      <input\n        type=\"text\"\n        value={courseName}\n        onChange={(e) => setCourseName(e.target.value)}\n        placeholder=\"New Course\"\n      />\n      <button onClick={handleAddCourse}>Add Course</button>\n\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n      <ul>\n        {courses.map((course) => (\n          <li key={course.id}>{course.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CourseManagement;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACJ,UAAU,EAAE;MACfG,eAAe,CAAC,yBAAyB,CAAC;MAC1C;IACF;IAEA,IAAIN,OAAO,CAACQ,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,KAAKP,UAAU,CAAC,EAAE;MACtDG,eAAe,CAAC,uBAAuB,CAAC;MACxC;IACF;IAEAL,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;MAAEW,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEH,IAAI,EAAEP;IAAW,CAAC,CAAC,CAAC;IAC9DC,aAAa,CAAC,EAAE,CAAC;IACjBE,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACER,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjB,OAAA;MAAAiB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAElB,UAAW;MAClBmB,QAAQ,EAAGC,CAAC,IAAKnB,aAAa,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC;IAAY;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFrB,OAAA;MAAQ4B,OAAO,EAAEnB,eAAgB;MAAAQ,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEpDd,YAAY,iBAAIP,OAAA;MAAGgB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEV;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhErB,OAAA;MAAAiB,QAAA,EACGf,OAAO,CAAC2B,GAAG,CAAElB,MAAM,iBAClBX,OAAA;QAAAiB,QAAA,EAAqBN,MAAM,CAACC;MAAI,GAAvBD,MAAM,CAACE,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxCIH,gBAAgB;AAAA6B,EAAA,GAAhB7B,gBAAgB;AA0CtB,eAAeA,gBAAgB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}